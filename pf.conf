#	$FreeBSD: src/share/examples/pf/pf.conf,v 1.1.2.1.6.1 2009/04/15 03:14:26 kensmith Exp $
#	$OpenBSD: pf.conf,v 1.34 2007/02/24 19:30:59 millert Exp $
#
# See pf.conf(5) and /usr/share/examples/pf for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.
#
# to install:		sudo pfctl -f /etc/pf.conf
# install+flush:	sudo pfctl -F all -f /etc/pf.conf
# to check: 		sudo pfctl -vnf /etc/pf.conf
#
#
# to install w/out flushing:

int_if="igb1"
int_if_ipv6_only="igb1.1"
int_if_ipv46="igb1.2"
k8s_if="igb1.240"
ext_comcast_if="igb0"

int_ip="10.0.9.1"
int_net="10.0.0.0/8"
ipv6_only_net="2601:646:100:69f1::/64"
tara_ip="10.0.9.30"
fedora_ip="10.0.9.101"	# diarizer.com
fedora_ip6="2601:646:100:69f0::101" # diarizer.com
cf_router_ip6="2601:646:100:69f0::24" # cf-router
bosh_ip="10.0.9.106"
ubuntu_ip="10.0.9.103"	# staging for BOSH IPv6 work
bosh_ip="10.0.9.130"
bosh_ip6="2601:646:100:69f0::106"

privileged_ipv4="{209.234.137.222, 204.15.0.254}"
privileged_ipv6="2001:4870:a2ce:1100::/61"

icmp4_types="{ echoreq }" # ping
icmp6_types="{ 2 128 }" # packet too big, echo request (ping6)
# Neighbor Discovery Protocol (NDP) (types 133-137):
#   Router Solicitation (RS), Router Advertisement (RA)
#   Neighbor Solicitation (NS), Neighbor Advertisement (NA)
#   Route Redirection
icmp6_types="{ 128 133 134 135 136 137 }"
tcp_services="{ 22 }" # we allow inbound ssh to our firewall
udp_services="{ 123 546}" # 546 == dhcpv6-client, IPv6-only
privileged_ipv6_services="{22 80 443 5900 8080 9443 25555}"
k8s_servers = "{ 10.240.0.10 10.240.0.11 10.240.0.13 }"

# options
set block-policy return
set loginterface $ext_comcast_if
set skip on lo

# scrub
scrub in

# nat/rdr
nat on $ext_comcast_if from $int_net -> ( $ext_comcast_if ) static-port
nat-anchor "ftp-proxy/*"
rdr-anchor "ftp-proxy/*"
# UPnPd rdr anchor
rdr-anchor "miniupnpd"
# allow ssh, screensharing from privileged IP addresses (e.g. work)
rdr pass on $ext_comcast_if proto tcp from $privileged_ipv4 to port  2222 -> $tara_ip	port 22
rdr pass on $ext_comcast_if proto tcp from any to port  2222 -> $tara_ip	port 22 # FIXME
rdr pass on $ext_comcast_if proto tcp from $privileged_ipv4 to port  3222 -> $ubuntu_ip	port 22
rdr pass on $ext_comcast_if proto tcp from $privileged_ipv4 to port  5900 -> $tara_ip	port 5900
#rdr pass on $ext_comcast_if proto tcp from any to port  5900 -> $tara_ip	port 5900 # FIXME

# diarizer.com has many ports, TLS & clear, for uploading sound files and view results:
rdr pass on $ext_comcast_if proto tcp to port    80 -> $fedora_ip	port 80
rdr pass on $ext_comcast_if proto tcp to port   443 -> $fedora_ip	port 443
rdr pass on $ext_comcast_if proto tcp to port  8080 -> $fedora_ip	port 8080
rdr pass on $ext_comcast_if proto tcp to port  9443 -> $fedora_ip	port 9443
rdr pass on $ext_comcast_if proto tcp to port  6443 -> $k8s_servers     port 6443 round-robin sticky-address

rdr pass on $ext_comcast_if proto tcp to port 25555 -> $bosh_ip	port 25555

# Anchors: ftp & miniupnp
anchor "ftp-proxy/*"
anchor "miniupnpd"

antispoof quick for { lo $int_if $int_if_ipv6_only $int_if_ipv46 $k8s_if $ext_comcast_if }

pass in quick on { $int_if $int_if_ipv6_only $int_if_ipv46 $k8s_if }
pass out quick keep state

pass in quick inet proto icmp all icmp-type $icmp4_types keep state
pass in quick on $ext_comcast_if inet proto tcp to ( $ext_comcast_if ) \
   port $tcp_services flags S/SA keep state (max-src-conn 10, max-src-conn-rate 10/60)
pass in quick on $ext_comcast_if inet proto udp to ( $ext_comcast_if ) \
   port $udp_services keep state

# IPv6
pass in quick on $ext_comcast_if inet6 proto ipv6-icmp icmp6-type \
	$icmp6_types keep state
pass in quick on $ext_comcast_if inet6 proto tcp from $privileged_ipv6 \
	to any port $privileged_ipv6_services flags S/SA keep state
pass in quick on $ext_comcast_if inet6 proto tcp to \
	( $ext_comcast_if ) port $tcp_services flags S/SA \
	keep state
pass in quick on $ext_comcast_if inet6 proto udp to \
	( $ext_comcast_if ) port $udp_services keep state
pass in quick on $ext_comcast_if inet6 proto tcp to \
	$bosh_ip6 port 25555 keep state
# diarizer.com: HTTP(s), both POST (speechbroker) and GET (nginx)
pass in quick on $ext_comcast_if inet6 proto tcp to \
	{ $fedora_ip6 $cf_router_ip6 } port { 22 80 443 8080 9443 } flags S/SA keep state
# pass in quick inet6 proto tcp to \
# 	$ipv6_only_net port { 80 443 } flags S/SA keep state

# default deny
block in log
